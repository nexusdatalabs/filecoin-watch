---
// Minimal Line Chart using Chart.js, mirroring docs example
export interface Props {
  x: Array<number | string>;
  y: number[];
  label?: string;
}

const { x = [], y = [], label = "Series" } = Astro.props as Props;

const len = Math.min(x.length, y.length);
const labels = x.slice(0, len);
const values = y.slice(0, len);
---

<div>
  <canvas
    id="myChart"
    data-x={JSON.stringify(labels)}
    data-y={JSON.stringify(values)}
    data-label={label}
    height="280"
  >
  </canvas>
</div>

<script>
  import Chart from "chart.js/auto";

  const canvas = document.getElementById("myChart") as HTMLCanvasElement;

  const x = JSON.parse(canvas.dataset.x || "[]");
  const y = JSON.parse(canvas.dataset.y || "[]");
  const label = canvas.dataset.label || undefined;

  const dataset: any = { data: y };
  if (label) dataset.label = label;

  Chart.defaults.font.family = "JetBrains Mono, monospace";

  new Chart(canvas as any, {
    type: "line",
    data: {
      labels: x,
      datasets: [
        {
          label: "Providers with Power",
          data: dataset.data,
          borderColor: "#000",
          pointRadius: 0,
          pointHoverRadius: 0,
          borderWidth: 2,
          fill: true,
        },
      ],
    },

    options: {
      responsive: true,
      maintainAspectRatio: false,
      animation: false,
      interaction: { mode: "index", intersect: false, axis: "x" },
      scales: {
        y: {
          beginAtZero: true,
        },
        x: {
          ticks: {
            autoSkip: true,
            maxTicksLimit: 6,
          },
        },
      },
      plugins: {
        legend: { display: false },
        tooltip: { cornerRadius: 0 },
      },
    },
  });
</script>
